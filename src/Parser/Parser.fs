// Implementation file for parser generated by fsyacc
module Parser.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open Parser.Syntax

let parse_error s = printfn "%O" s
exception ParseError of (string * FSharp.Text.Parsing.IParseState)

# 14 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | OUTDENT
  | INDENT
  | BLOCKEND
  | BLOCKBEGIN
  | EQ
  | COLON
  | DARROW
  | ARROW
  | SEMICOLON
  | REFL
  | RECT
  | STAR
  | JEQ
  | SPACE
  | NEWLINE
  | MODULE
  | WHERE
  | PUBLIC
  | OPEN
  | IMPORT
  | COMMA
  | DOT
  | RPAREN
  | LPAREN
  | LAMBDA
  | UNDER_BAR
  | IDENT of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_OUTDENT
    | TOKEN_INDENT
    | TOKEN_BLOCKEND
    | TOKEN_BLOCKBEGIN
    | TOKEN_EQ
    | TOKEN_COLON
    | TOKEN_DARROW
    | TOKEN_ARROW
    | TOKEN_SEMICOLON
    | TOKEN_REFL
    | TOKEN_RECT
    | TOKEN_STAR
    | TOKEN_JEQ
    | TOKEN_SPACE
    | TOKEN_NEWLINE
    | TOKEN_MODULE
    | TOKEN_WHERE
    | TOKEN_PUBLIC
    | TOKEN_OPEN
    | TOKEN_IMPORT
    | TOKEN_COMMA
    | TOKEN_DOT
    | TOKEN_RPAREN
    | TOKEN_LPAREN
    | TOKEN_LAMBDA
    | TOKEN_UNDER_BAR
    | TOKEN_IDENT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM__startsyntax
    | NONTERM__startlongIdent
    | NONTERM__startcontextElm
    | NONTERM__startterm
    | NONTERM__startsymbolArgs
    | NONTERM__startsymbolLongIdent
    | NONTERM__startident
    | NONTERM_start
    | NONTERM_module
    | NONTERM_longIdentOrUnderBar
    | NONTERM_syntax
    | NONTERM_syntax'
    | NONTERM_syntaxElm
    | NONTERM_expr
    | NONTERM_open
    | NONTERM_openImport
    | NONTERM_context
    | NONTERM_context'
    | NONTERM_contextElm
    | NONTERM_variableIdent
    | NONTERM_term_
    | NONTERM_term
    | NONTERM_termElement_
    | NONTERM_termElement
    | NONTERM_termElementOrParen
    | NONTERM_symbolArgs
    | NONTERM_symbolOrApp
    | NONTERM_app
    | NONTERM_longIdent
    | NONTERM_longIdent'
    | NONTERM_symbolIdent
    | NONTERM_symbolLongIdent
    | NONTERM_pi
    | NONTERM_abs
    | NONTERM_eq
    | NONTERM_refl
    | NONTERM_terms
    | NONTERM_terms'
    | NONTERM_ident
    | NONTERM_symbolIdentOrUnderBar
    | NONTERM_signature
    | NONTERM_end

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | OUTDENT  -> 1 
  | INDENT  -> 2 
  | BLOCKEND  -> 3 
  | BLOCKBEGIN  -> 4 
  | EQ  -> 5 
  | COLON  -> 6 
  | DARROW  -> 7 
  | ARROW  -> 8 
  | SEMICOLON  -> 9 
  | REFL  -> 10 
  | RECT  -> 11 
  | STAR  -> 12 
  | JEQ  -> 13 
  | SPACE  -> 14 
  | NEWLINE  -> 15 
  | MODULE  -> 16 
  | WHERE  -> 17 
  | PUBLIC  -> 18 
  | OPEN  -> 19 
  | IMPORT  -> 20 
  | COMMA  -> 21 
  | DOT  -> 22 
  | RPAREN  -> 23 
  | LPAREN  -> 24 
  | LAMBDA  -> 25 
  | UNDER_BAR  -> 26 
  | IDENT _ -> 27 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_OUTDENT 
  | 2 -> TOKEN_INDENT 
  | 3 -> TOKEN_BLOCKEND 
  | 4 -> TOKEN_BLOCKBEGIN 
  | 5 -> TOKEN_EQ 
  | 6 -> TOKEN_COLON 
  | 7 -> TOKEN_DARROW 
  | 8 -> TOKEN_ARROW 
  | 9 -> TOKEN_SEMICOLON 
  | 10 -> TOKEN_REFL 
  | 11 -> TOKEN_RECT 
  | 12 -> TOKEN_STAR 
  | 13 -> TOKEN_JEQ 
  | 14 -> TOKEN_SPACE 
  | 15 -> TOKEN_NEWLINE 
  | 16 -> TOKEN_MODULE 
  | 17 -> TOKEN_WHERE 
  | 18 -> TOKEN_PUBLIC 
  | 19 -> TOKEN_OPEN 
  | 20 -> TOKEN_IMPORT 
  | 21 -> TOKEN_COMMA 
  | 22 -> TOKEN_DOT 
  | 23 -> TOKEN_RPAREN 
  | 24 -> TOKEN_LPAREN 
  | 25 -> TOKEN_LAMBDA 
  | 26 -> TOKEN_UNDER_BAR 
  | 27 -> TOKEN_IDENT 
  | 30 -> TOKEN_end_of_input
  | 28 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM__startsyntax 
    | 2 -> NONTERM__startlongIdent 
    | 3 -> NONTERM__startcontextElm 
    | 4 -> NONTERM__startterm 
    | 5 -> NONTERM__startsymbolArgs 
    | 6 -> NONTERM__startsymbolLongIdent 
    | 7 -> NONTERM__startident 
    | 8 -> NONTERM_start 
    | 9 -> NONTERM_start 
    | 10 -> NONTERM_module 
    | 11 -> NONTERM_module 
    | 12 -> NONTERM_module 
    | 13 -> NONTERM_longIdentOrUnderBar 
    | 14 -> NONTERM_longIdentOrUnderBar 
    | 15 -> NONTERM_syntax 
    | 16 -> NONTERM_syntax 
    | 17 -> NONTERM_syntax' 
    | 18 -> NONTERM_syntax' 
    | 19 -> NONTERM_syntax' 
    | 20 -> NONTERM_syntaxElm 
    | 21 -> NONTERM_syntaxElm 
    | 22 -> NONTERM_syntaxElm 
    | 23 -> NONTERM_expr 
    | 24 -> NONTERM_open 
    | 25 -> NONTERM_open 
    | 26 -> NONTERM_open 
    | 27 -> NONTERM_openImport 
    | 28 -> NONTERM_openImport 
    | 29 -> NONTERM_context 
    | 30 -> NONTERM_context 
    | 31 -> NONTERM_context' 
    | 32 -> NONTERM_context' 
    | 33 -> NONTERM_contextElm 
    | 34 -> NONTERM_contextElm 
    | 35 -> NONTERM_variableIdent 
    | 36 -> NONTERM_term_ 
    | 37 -> NONTERM_term_ 
    | 38 -> NONTERM_term_ 
    | 39 -> NONTERM_term_ 
    | 40 -> NONTERM_term_ 
    | 41 -> NONTERM_term_ 
    | 42 -> NONTERM_term 
    | 43 -> NONTERM_term 
    | 44 -> NONTERM_termElement_ 
    | 45 -> NONTERM_termElement_ 
    | 46 -> NONTERM_termElement_ 
    | 47 -> NONTERM_termElement 
    | 48 -> NONTERM_termElementOrParen 
    | 49 -> NONTERM_termElementOrParen 
    | 50 -> NONTERM_symbolArgs 
    | 51 -> NONTERM_symbolArgs 
    | 52 -> NONTERM_symbolOrApp 
    | 53 -> NONTERM_symbolOrApp 
    | 54 -> NONTERM_app 
    | 55 -> NONTERM_app 
    | 56 -> NONTERM_app 
    | 57 -> NONTERM_longIdent 
    | 58 -> NONTERM_longIdent' 
    | 59 -> NONTERM_longIdent' 
    | 60 -> NONTERM_symbolIdent 
    | 61 -> NONTERM_symbolLongIdent 
    | 62 -> NONTERM_pi 
    | 63 -> NONTERM_pi 
    | 64 -> NONTERM_abs 
    | 65 -> NONTERM_abs 
    | 66 -> NONTERM_eq 
    | 67 -> NONTERM_refl 
    | 68 -> NONTERM_terms 
    | 69 -> NONTERM_terms 
    | 70 -> NONTERM_terms' 
    | 71 -> NONTERM_terms' 
    | 72 -> NONTERM_ident 
    | 73 -> NONTERM_symbolIdentOrUnderBar 
    | 74 -> NONTERM_symbolIdentOrUnderBar 
    | 75 -> NONTERM_signature 
    | 76 -> NONTERM_signature 
    | 77 -> NONTERM_signature 
    | 78 -> NONTERM_end 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 30 
let _fsyacc_tagOfErrorTerminal = 28

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | OUTDENT  -> "OUTDENT" 
  | INDENT  -> "INDENT" 
  | BLOCKEND  -> "BLOCKEND" 
  | BLOCKBEGIN  -> "BLOCKBEGIN" 
  | EQ  -> "EQ" 
  | COLON  -> "COLON" 
  | DARROW  -> "DARROW" 
  | ARROW  -> "ARROW" 
  | SEMICOLON  -> "SEMICOLON" 
  | REFL  -> "REFL" 
  | RECT  -> "RECT" 
  | STAR  -> "STAR" 
  | JEQ  -> "JEQ" 
  | SPACE  -> "SPACE" 
  | NEWLINE  -> "NEWLINE" 
  | MODULE  -> "MODULE" 
  | WHERE  -> "WHERE" 
  | PUBLIC  -> "PUBLIC" 
  | OPEN  -> "OPEN" 
  | IMPORT  -> "IMPORT" 
  | COMMA  -> "COMMA" 
  | DOT  -> "DOT" 
  | RPAREN  -> "RPAREN" 
  | LPAREN  -> "LPAREN" 
  | LAMBDA  -> "LAMBDA" 
  | UNDER_BAR  -> "UNDER_BAR" 
  | IDENT _ -> "IDENT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | OUTDENT  -> (null : System.Object) 
  | INDENT  -> (null : System.Object) 
  | BLOCKEND  -> (null : System.Object) 
  | BLOCKBEGIN  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DARROW  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | REFL  -> (null : System.Object) 
  | RECT  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | JEQ  -> (null : System.Object) 
  | SPACE  -> (null : System.Object) 
  | NEWLINE  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | WHERE  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | LAMBDA  -> (null : System.Object) 
  | UNDER_BAR  -> (null : System.Object) 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;0us;65535us;0us;65535us;0us;65535us;0us;65535us;0us;65535us;0us;65535us;0us;65535us;1us;65535us;0us;1us;5us;65535us;0us;16us;2us;40us;24us;40us;35us;40us;38us;40us;1us;65535us;20us;21us;2us;65535us;2us;3us;24us;25us;4us;65535us;2us;32us;24us;32us;35us;36us;38us;39us;4us;65535us;2us;34us;24us;34us;35us;34us;38us;34us;4us;65535us;2us;42us;24us;42us;35us;42us;38us;42us;4us;65535us;2us;41us;24us;41us;35us;41us;38us;41us;4us;65535us;2us;44us;24us;44us;35us;44us;38us;44us;6us;65535us;2us;131us;21us;22us;24us;131us;35us;131us;38us;131us;128us;129us;7us;65535us;2us;51us;21us;51us;24us;51us;35us;51us;38us;51us;52us;53us;128us;51us;8us;65535us;2us;52us;6us;7us;21us;52us;24us;52us;35us;52us;38us;52us;52us;52us;128us;52us;3us;65535us;54us;55us;106us;107us;110us;111us;18us;65535us;8us;72us;10us;72us;56us;72us;68us;72us;79us;72us;80us;72us;86us;72us;99us;72us;102us;72us;104us;72us;108us;72us;112us;72us;115us;72us;122us;72us;123us;72us;130us;72us;132us;72us;134us;72us;18us;65535us;8us;9us;10us;85us;56us;57us;68us;84us;79us;81us;80us;81us;86us;83us;99us;100us;102us;103us;104us;105us;108us;109us;112us;113us;115us;116us;122us;117us;123us;118us;130us;119us;132us;120us;134us;121us;21us;65535us;8us;77us;10us;77us;56us;77us;66us;77us;67us;77us;68us;77us;73us;77us;79us;77us;80us;77us;86us;77us;99us;77us;102us;77us;104us;77us;108us;77us;112us;77us;115us;77us;122us;77us;123us;77us;130us;77us;132us;77us;134us;77us;21us;65535us;8us;78us;10us;78us;56us;78us;66us;88us;67us;88us;68us;78us;73us;78us;79us;78us;80us;78us;86us;78us;99us;78us;102us;78us;104us;78us;108us;78us;112us;78us;115us;78us;122us;78us;123us;78us;130us;78us;132us;78us;134us;78us;19us;65535us;8us;92us;10us;92us;56us;92us;68us;92us;73us;91us;79us;92us;80us;92us;86us;92us;99us;92us;102us;92us;104us;92us;108us;92us;112us;92us;115us;92us;122us;92us;123us;92us;130us;92us;132us;92us;134us;92us;3us;65535us;10us;11us;68us;70us;86us;87us;18us;65535us;8us;90us;10us;90us;56us;90us;68us;90us;79us;90us;80us;90us;86us;90us;99us;90us;102us;90us;104us;90us;108us;90us;112us;90us;115us;90us;122us;90us;123us;90us;130us;90us;132us;90us;134us;90us;18us;65535us;8us;73us;10us;73us;56us;73us;68us;73us;79us;73us;80us;73us;86us;73us;99us;73us;102us;73us;104us;73us;108us;73us;112us;73us;115us;73us;122us;73us;123us;73us;130us;73us;132us;73us;134us;73us;29us;65535us;4us;5us;8us;66us;10us;66us;12us;98us;20us;29us;45us;46us;48us;49us;54us;61us;56us;66us;66us;76us;67us;76us;68us;66us;73us;76us;79us;66us;80us;67us;86us;66us;99us;66us;102us;66us;104us;66us;106us;61us;108us;66us;110us;61us;112us;66us;115us;66us;122us;66us;123us;66us;130us;66us;132us;66us;134us;66us;30us;65535us;4us;93us;8us;93us;10us;93us;12us;93us;20us;93us;45us;93us;48us;93us;54us;93us;56us;93us;66us;93us;67us;93us;68us;93us;73us;93us;79us;93us;80us;93us;86us;93us;95us;96us;99us;93us;102us;93us;104us;93us;106us;93us;108us;93us;110us;93us;112us;93us;115us;93us;122us;93us;123us;93us;130us;93us;132us;93us;134us;93us;4us;65535us;2us;126us;24us;126us;35us;126us;38us;126us;1us;65535us;12us;13us;18us;65535us;8us;62us;10us;62us;56us;62us;68us;62us;79us;62us;80us;62us;86us;62us;99us;62us;102us;62us;104us;62us;108us;62us;112us;62us;115us;62us;122us;62us;123us;62us;130us;62us;132us;62us;134us;62us;18us;65535us;8us;63us;10us;63us;56us;63us;68us;63us;79us;63us;80us;63us;86us;63us;99us;63us;102us;63us;104us;63us;108us;63us;112us;63us;115us;63us;122us;63us;123us;63us;130us;63us;132us;63us;134us;63us;18us;65535us;8us;64us;10us;64us;56us;64us;68us;64us;79us;64us;80us;64us;86us;64us;99us;64us;102us;64us;104us;64us;108us;64us;112us;64us;115us;64us;122us;64us;123us;64us;130us;64us;132us;64us;134us;64us;18us;65535us;8us;65us;10us;65us;56us;65us;68us;65us;79us;65us;80us;65us;86us;65us;99us;65us;102us;65us;104us;65us;108us;65us;112us;65us;115us;65us;122us;65us;123us;65us;130us;65us;132us;65us;134us;65us;0us;65535us;0us;65535us;35us;65535us;2us;97us;4us;94us;8us;94us;10us;94us;12us;94us;14us;15us;20us;94us;24us;97us;35us;97us;38us;97us;45us;94us;48us;94us;54us;94us;56us;94us;66us;94us;67us;94us;68us;94us;73us;94us;79us;94us;80us;94us;86us;94us;95us;94us;99us;94us;102us;94us;104us;94us;106us;94us;108us;94us;110us;94us;112us;94us;115us;94us;122us;94us;123us;94us;130us;94us;132us;94us;134us;94us;4us;65535us;2us;127us;24us;127us;35us;127us;38us;127us;4us;65535us;2us;43us;24us;43us;35us;43us;38us;43us;0us;65535us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;2us;3us;4us;5us;6us;7us;8us;10us;16us;18us;21us;26us;31us;36us;41us;46us;53us;61us;70us;74us;93us;112us;134us;156us;176us;180us;199us;218us;248us;279us;284us;286us;305us;324us;343us;362us;363us;364us;400us;405us;410us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;2us;1us;2us;1us;3us;1us;3us;1us;4us;2us;4us;66us;1us;5us;1us;5us;1us;6us;1us;6us;1us;7us;1us;7us;1us;8us;1us;8us;1us;9us;1us;9us;3us;10us;11us;12us;3us;10us;11us;12us;3us;10us;11us;12us;3us;10us;11us;12us;2us;10us;12us;1us;10us;1us;10us;2us;12us;19us;1us;12us;1us;13us;1us;14us;1us;15us;1us;16us;1us;16us;2us;17us;18us;1us;17us;1us;17us;1us;19us;1us;19us;1us;19us;1us;20us;1us;21us;1us;22us;1us;23us;1us;24us;4us;25us;26us;27us;28us;2us;25us;26us;1us;25us;2us;27us;28us;2us;27us;28us;1us;28us;1us;30us;2us;31us;32us;1us;31us;2us;33us;34us;2us;33us;34us;2us;33us;34us;2us;33us;66us;1us;33us;1us;34us;1us;34us;1us;35us;1us;36us;1us;37us;1us;38us;1us;39us;5us;40us;41us;46us;52us;53us;6us;40us;41us;46us;52us;53us;62us;3us;40us;41us;53us;1us;40us;1us;41us;1us;41us;1us;42us;2us;43us;55us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;2us;49us;62us;2us;49us;66us;1us;49us;4us;50us;50us;51us;66us;4us;50us;51us;53us;66us;3us;50us;51us;66us;2us;50us;51us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;2us;56us;63us;1us;57us;2us;58us;59us;1us;58us;1us;58us;1us;60us;1us;61us;1us;62us;2us;62us;66us;1us;62us;1us;62us;2us;62us;66us;1us;63us;2us;63us;66us;2us;64us;65us;1us;64us;1us;64us;2us;64us;66us;1us;65us;1us;65us;1us;65us;2us;65us;66us;1us;65us;1us;65us;2us;65us;66us;2us;66us;66us;2us;66us;67us;2us;66us;75us;2us;66us;76us;2us;66us;77us;1us;66us;1us;67us;1us;72us;1us;73us;1us;74us;2us;75us;77us;2us;75us;77us;1us;75us;1us;75us;1us;76us;1us;76us;1us;77us;1us;77us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;21us;23us;25us;27us;29us;31us;33us;35us;37us;39us;41us;45us;49us;53us;57us;60us;62us;64us;67us;69us;71us;73us;75us;77us;79us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;107us;110us;112us;115us;118us;120us;122us;125us;127us;130us;133us;136us;139us;141us;143us;145us;147us;149us;151us;153us;155us;161us;168us;172us;174us;176us;178us;180us;183us;185us;187us;189us;191us;193us;195us;198us;201us;203us;208us;213us;217us;220us;222us;224us;226us;228us;230us;233us;235us;238us;240us;242us;244us;246us;248us;251us;253us;255us;258us;260us;263us;266us;268us;270us;273us;275us;277us;279us;282us;284us;286us;289us;292us;295us;298us;301us;304us;306us;308us;310us;312us;314us;317us;320us;322us;324us;326us;328us;330us;|]
let _fsyacc_action_rows = 135
let _fsyacc_actionTableElements = [|2us;32768us;16us;20us;28us;18us;0us;49152us;7us;16413us;9us;31us;16us;20us;19us;45us;24us;54us;26us;125us;27us;124us;28us;37us;0us;49152us;1us;32768us;27us;124us;0us;49152us;1us;32768us;24us;54us;0us;49152us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;1us;49152us;5us;122us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;0us;49152us;1us;32768us;27us;124us;0us;49152us;1us;32768us;27us;124us;0us;49152us;1us;32768us;0us;17us;0us;16392us;1us;32768us;0us;19us;0us;16393us;2us;32768us;26us;30us;27us;124us;1us;16413us;24us;54us;1us;32768us;17us;23us;1us;16395us;4us;24us;7us;16413us;9us;31us;16us;20us;19us;45us;24us;54us;26us;125us;27us;124us;28us;27us;1us;32768us;3us;26us;0us;16394us;2us;32768us;3us;28us;9us;38us;0us;16396us;0us;16397us;0us;16398us;0us;16399us;1us;32768us;9us;33us;0us;16400us;1us;16402us;9us;35us;6us;16413us;16us;20us;19us;45us;24us;54us;26us;125us;27us;124us;28us;37us;0us;16401us;1us;32768us;9us;38us;6us;16413us;16us;20us;19us;45us;24us;54us;26us;125us;27us;124us;28us;37us;0us;16403us;0us;16404us;0us;16405us;0us;16406us;0us;16407us;0us;16408us;2us;32768us;20us;48us;27us;124us;1us;16410us;18us;47us;0us;16409us;1us;32768us;27us;124us;1us;16411us;18us;50us;0us;16412us;0us;16414us;1us;16416us;24us;54us;0us;16415us;1us;32768us;27us;124us;1us;32768us;6us;56us;7us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;28us;59us;2us;32768us;5us;122us;23us;58us;0us;16417us;1us;32768us;23us;60us;0us;16418us;0us;16419us;0us;16420us;0us;16421us;0us;16422us;0us;16423us;4us;16430us;11us;75us;12us;74us;24us;68us;27us;124us;5us;16430us;6us;99us;11us;75us;12us;74us;24us;68us;27us;124us;7us;32768us;10us;123us;11us;75us;12us;74us;23us;69us;24us;80us;25us;106us;27us;124us;0us;16424us;1us;32768us;23us;71us;0us;16425us;0us;16426us;4us;16427us;11us;75us;12us;74us;24us;79us;27us;124us;0us;16428us;0us;16429us;0us;16430us;0us;16431us;0us;16432us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;2us;32768us;5us;122us;23us;82us;0us;16433us;2us;16434us;5us;122us;21us;86us;3us;32768us;5us;122us;21us;86us;23us;89us;2us;32768us;5us;122us;21us;86us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;0us;16435us;0us;16436us;0us;16437us;0us;16438us;0us;16439us;1us;16440us;8us;104us;0us;16441us;1us;16443us;22us;95us;1us;32768us;27us;124us;0us;16442us;0us;16444us;0us;16445us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;2us;32768us;5us;122us;23us;101us;1us;32768us;8us;102us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;1us;16446us;5us;122us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;1us;16447us;5us;122us;2us;32768us;24us;110us;27us;124us;1us;32768us;8us;108us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;1us;16448us;5us;122us;1us;32768us;27us;124us;1us;32768us;6us;112us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;2us;32768us;5us;122us;23us;114us;1us;32768us;8us;115us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;1us;16449us;5us;122us;1us;16450us;5us;122us;1us;16451us;5us;122us;1us;16459us;5us;122us;1us;16460us;5us;122us;1us;16461us;5us;122us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;0us;16456us;0us;16457us;0us;16458us;1us;32768us;6us;128us;2us;16413us;24us;54us;28us;133us;1us;32768us;7us;130us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;1us;32768us;7us;132us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;1us;32768us;7us;134us;6us;32768us;10us;123us;11us;75us;12us;74us;24us;80us;25us;106us;27us;124us;|]
let _fsyacc_actionTableRowOffsets = [|0us;3us;4us;12us;13us;15us;16us;18us;19us;26us;28us;35us;36us;38us;39us;41us;42us;44us;45us;47us;48us;51us;53us;55us;57us;65us;67us;68us;71us;72us;73us;74us;75us;77us;78us;80us;87us;88us;90us;97us;98us;99us;100us;101us;102us;103us;106us;108us;109us;111us;113us;114us;115us;117us;118us;120us;122us;130us;133us;134us;136us;137us;138us;139us;140us;141us;142us;147us;153us;161us;162us;164us;165us;166us;171us;172us;173us;174us;175us;176us;183us;190us;193us;194us;197us;201us;204us;211us;212us;213us;214us;215us;216us;218us;219us;221us;223us;224us;225us;226us;233us;236us;238us;245us;247us;254us;256us;259us;261us;268us;270us;272us;274us;281us;284us;286us;293us;295us;297us;299us;301us;303us;305us;312us;319us;320us;321us;322us;324us;327us;329us;336us;338us;345us;347us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;1us;1us;1us;1us;1us;1us;2us;2us;7us;4us;7us;1us;1us;1us;2us;3us;1us;3us;1us;1us;1us;1us;1us;3us;2us;3us;4us;0us;1us;2us;1us;5us;5us;1us;1us;1us;1us;1us;3us;4us;1us;1us;1us;1us;1us;1us;1us;3us;3us;3us;2us;4us;1us;2us;1us;1us;3us;1us;1us;1us;7us;3us;4us;8us;3us;2us;0us;1us;2us;1us;1us;1us;1us;5us;3us;5us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;3us;4us;5us;6us;7us;8us;8us;9us;9us;9us;10us;10us;11us;11us;12us;12us;12us;13us;13us;13us;14us;15us;15us;15us;16us;16us;17us;17us;18us;18us;19us;19us;20us;21us;21us;21us;21us;21us;21us;22us;22us;23us;23us;23us;24us;25us;25us;26us;26us;27us;27us;28us;28us;28us;29us;30us;30us;31us;32us;33us;33us;34us;34us;35us;36us;37us;37us;38us;38us;39us;40us;40us;41us;41us;41us;42us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;49152us;65535us;49152us;65535us;49152us;65535us;65535us;65535us;49152us;65535us;49152us;65535us;49152us;65535us;16392us;65535us;16393us;65535us;65535us;65535us;65535us;65535us;65535us;16394us;65535us;16396us;16397us;16398us;16399us;65535us;16400us;65535us;65535us;16401us;65535us;65535us;16403us;16404us;16405us;16406us;16407us;16408us;65535us;65535us;16409us;65535us;65535us;16412us;16414us;65535us;16415us;65535us;65535us;65535us;65535us;16417us;65535us;16418us;16419us;16420us;16421us;16422us;16423us;65535us;65535us;65535us;16424us;65535us;16425us;16426us;65535us;16428us;16429us;16430us;16431us;16432us;65535us;65535us;65535us;16433us;65535us;65535us;65535us;65535us;16435us;16436us;16437us;16438us;16439us;65535us;16441us;65535us;65535us;16442us;16444us;16445us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16456us;16457us;16458us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;|]
let _fsyacc_reductions = lazy [|
# 351 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynModule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startstart));
# 360 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Syntax in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startsyntax));
# 369 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startlongIdent));
# 378 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> ContextElement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startcontextElm));
# 387 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startterm));
# 396 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynPreTerm list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startsymbolArgs));
# 405 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynSymbolIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startsymbolLongIdent));
# 414 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startident));
# 423 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_module in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                       _1
                   )
# 56 "Parser.fsy"
                 : SynModule));
# 434 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                      raise (ParseError ("startError", parseState))
                   )
# 57 "Parser.fsy"
                 : SynModule));
# 444 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_longIdentOrUnderBar in
            let _3 = parseState.GetInput(3) :?> 'gentype_context in
            let _6 = parseState.GetInput(6) :?> Syntax in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                                                                                {
                                 moduleName = _2
                                 context = _3
                                 syntax = _6
                                 range = parseState.ResultRange
                             }
                   )
# 61 "Parser.fsy"
                 : 'gentype_module));
# 462 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_longIdentOrUnderBar in
            let _3 = parseState.GetInput(3) :?> 'gentype_context in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Parser.fsy"
                                                                     {
                             moduleName = _2
                             context = _3
                             syntax = {
                                 syntax = []
                             }
                             range = parseState.ResultRange
                         }
                   )
# 67 "Parser.fsy"
                 : 'gentype_module));
# 481 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_longIdentOrUnderBar in
            let _3 = parseState.GetInput(3) :?> 'gentype_context in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                                                               raise (ParseError ("module_syntax", parseState))
                   )
# 75 "Parser.fsy"
                 : 'gentype_module));
# 493 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                      Some _1
                   )
# 78 "Parser.fsy"
                 : 'gentype_longIdentOrUnderBar));
# 504 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                      None
                   )
# 79 "Parser.fsy"
                 : 'gentype_longIdentOrUnderBar));
# 514 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                      {syntax = []}
                   )
# 82 "Parser.fsy"
                 : Syntax));
# 524 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_syntax' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                              {
                             syntax = _1
                         }
                   )
# 86 "Parser.fsy"
                 : Syntax));
# 537 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_syntaxElm in
            let _3 = parseState.GetInput(3) :?> 'gentype_syntax' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                        {
                                 syntaxElement = _1
                                 range = parseState.ResultRange
                             }::_3
                   )
# 91 "Parser.fsy"
                 : 'gentype_syntax'));
# 552 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_syntaxElm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                      [{
                             syntaxElement = _1
                             range = parseState.ResultRange}]
                   )
# 95 "Parser.fsy"
                 : 'gentype_syntax'));
# 565 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_syntax' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                                    
                             raise (ParseError ("syntax'", parseState))
                         
                   )
# 98 "Parser.fsy"
                 : 'gentype_syntax'));
# 578 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_module in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                   (Module _1)
                   )
# 104 "Parser.fsy"
                 : 'gentype_syntaxElm));
# 589 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_open in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                 (Open _1)
                   )
# 105 "Parser.fsy"
                 : 'gentype_syntaxElm));
# 600 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                 (Expr _1)
                   )
# 106 "Parser.fsy"
                 : 'gentype_syntaxElm));
# 611 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_signature in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                      {
                             expr = _1
                             range = parseState.ResultRange
                         }
                   )
# 109 "Parser.fsy"
                 : 'gentype_expr));
# 625 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_openImport in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Parser.fsy"
                                       _1
                   )
# 115 "Parser.fsy"
                 : 'gentype_open));
# 636 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                                  {
                             public' = true
                             openIdent = _2
                             range = parseState.ResultRange}
                   )
# 116 "Parser.fsy"
                 : 'gentype_open));
# 650 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                           {
                             public' = false
                             openIdent = _2
                             range = parseState.ResultRange}
                   )
# 120 "Parser.fsy"
                 : 'gentype_open));
# 664 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "Parser.fsy"
                                                  {
                             public' = false
                             openIdent = _3
                             range = parseState.ResultRange}
                   )
# 126 "Parser.fsy"
                 : 'gentype_openImport));
# 678 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Parser.fsy"
                                                         {
                             public' = true
                             openIdent = _3
                             range = parseState.ResultRange
                         }
                   )
# 130 "Parser.fsy"
                 : 'gentype_openImport));
# 693 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Parser.fsy"
                            {
                             preContext = []
                             range = parseState.ResultRange
                         }
                   )
# 137 "Parser.fsy"
                 : 'gentype_context));
# 706 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_context' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Parser.fsy"
                                     {
                             preContext = _1
                             range = parseState.ResultRange
                         }
                   )
# 141 "Parser.fsy"
                 : 'gentype_context));
# 720 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> ContextElement in
            let _2 = parseState.GetInput(2) :?> 'gentype_context' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "Parser.fsy"
                                                _1::_2
                   )
# 147 "Parser.fsy"
                 : 'gentype_context'));
# 732 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> ContextElement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "Parser.fsy"
                                       [_1]
                   )
# 148 "Parser.fsy"
                 : 'gentype_context'));
# 743 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_variableIdent in
            let _4 = parseState.GetInput(4) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "Parser.fsy"
                                                                   {
                             variable = _2
                             preTerm = _4
                             range = parseState.ResultRange
                         }
                   )
# 152 "Parser.fsy"
                 : ContextElement));
# 759 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_variableIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Parser.fsy"
                                                                    raise (ParseError("contextElm", parseState))
                   )
# 157 "Parser.fsy"
                 : ContextElement));
# 770 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Parser.fsy"
                                      {
                             variableIdent = _1
                             range = parseState.ResultRange
                         }
                   )
# 160 "Parser.fsy"
                 : 'gentype_variableIdent));
# 784 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pi in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "Parser.fsy"
                               Pi _1
                   )
# 166 "Parser.fsy"
                 : 'gentype_term_));
# 795 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_abs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "Parser.fsy"
                                Abs _1
                   )
# 167 "Parser.fsy"
                 : 'gentype_term_));
# 806 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_eq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "Parser.fsy"
                               Eq _1
                   )
# 168 "Parser.fsy"
                 : 'gentype_term_));
# 817 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_refl in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Parser.fsy"
                                 Refl _1
                   )
# 169 "Parser.fsy"
                 : 'gentype_term_));
# 828 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "Parser.fsy"
                                                    Symbol (_1, [])
                   )
# 170 "Parser.fsy"
                 : 'gentype_term_));
# 839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            let _3 = parseState.GetInput(3) :?> SynPreTerm list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "Parser.fsy"
                                                               Symbol (_1, _3)
                   )
# 171 "Parser.fsy"
                 : 'gentype_term_));
# 851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_ in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "Parser.fsy"
                                  {
                             preTerm = _1
                             range = parseState.ResultRange}
                   )
# 174 "Parser.fsy"
                 : SynPreTerm));
# 864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_app in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "Parser.fsy"
                                _1
                   )
# 177 "Parser.fsy"
                 : SynPreTerm));
# 875 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "Parser.fsy"
                                 Star
                   )
# 181 "Parser.fsy"
                 : 'gentype_termElement_));
# 885 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "Parser.fsy"
                                 Rect
                   )
# 182 "Parser.fsy"
                 : 'gentype_termElement_));
# 895 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "Parser.fsy"
                                      SymbolOrVariable _1
                   )
# 183 "Parser.fsy"
                 : 'gentype_termElement_));
# 906 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_termElement_ in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "Parser.fsy"
                                         {
                             preTerm = _1
                             range = parseState.ResultRange
                         }
                   )
# 186 "Parser.fsy"
                 : 'gentype_termElement));
# 920 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_termElement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "Parser.fsy"
                                        _1
                   )
# 192 "Parser.fsy"
                 : 'gentype_termElementOrParen));
# 931 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "Parser.fsy"
                                               _2
                   )
# 193 "Parser.fsy"
                 : 'gentype_termElementOrParen));
# 942 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynPreTerm in
            let _3 = parseState.GetInput(3) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "Parser.fsy"
                                            [_1; _3]
                   )
# 196 "Parser.fsy"
                 : SynPreTerm list));
# 954 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynPreTerm in
            let _3 = parseState.GetInput(3) :?> SynPreTerm list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "Parser.fsy"
                                                  _1::_3
                   )
# 197 "Parser.fsy"
                 : SynPreTerm list));
# 966 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            let _2 = parseState.GetInput(2) :?> 'gentype_termElement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "Parser.fsy"
                                                  {
                             preTerm = SymbolOrApp (_1, _2)
                             range = parseState.ResultRange}
                   )
# 200 "Parser.fsy"
                 : 'gentype_symbolOrApp));
# 980 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            let _3 = parseState.GetInput(3) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "Parser.fsy"
                                                         {
                             preTerm = SymbolOrApp (_1, _3)
                             range = parseState.ResultRange}
                   )
# 203 "Parser.fsy"
                 : 'gentype_symbolOrApp));
# 994 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbolOrApp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "Parser.fsy"
                                        _1
                   )
# 208 "Parser.fsy"
                 : 'gentype_app));
# 1005 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_app in
            let _2 = parseState.GetInput(2) :?> 'gentype_termElementOrParen in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "Parser.fsy"
                                                   {
                             preTerm = 
                                 App (None, None, None, 
                                     _1
                                     , _2)
                             range = parseState.ResultRange}
                   )
# 209 "Parser.fsy"
                 : 'gentype_app));
# 1022 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_termElementOrParen in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "Parser.fsy"
                                               _1
                   )
# 215 "Parser.fsy"
                 : 'gentype_app));
# 1033 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_longIdent' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "Parser.fsy"
                                            SynLongIdent (_1, [])
                   )
# 218 "Parser.fsy"
                 : SynLongIdent));
# 1044 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynIdent in
            let _3 = parseState.GetInput(3) :?> 'gentype_longIdent' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "Parser.fsy"
                                                 _1::_3
                   )
# 221 "Parser.fsy"
                 : 'gentype_longIdent'));
# 1056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "Parser.fsy"
                                  [_1]
                   )
# 222 "Parser.fsy"
                 : 'gentype_longIdent'));
# 1067 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "Parser.fsy"
                                  {
                             symbolIdent = SynLongIdent ([_1], [])
                             range = parseState.ResultRange
                         }
                   )
# 226 "Parser.fsy"
                 : 'gentype_symbolIdent));
# 1081 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynLongIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "Parser.fsy"
                                      {
                             symbolIdent = _1
                             range = parseState.ResultRange}
                   )
# 232 "Parser.fsy"
                 : SynSymbolIdent));
# 1094 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> SynLongIdent in
            let _4 = parseState.GetInput(4) :?> SynPreTerm in
            let _7 = parseState.GetInput(7) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "Parser.fsy"
                                                                          
                             (_4, Some _2, _7)
                         
                   )
# 238 "Parser.fsy"
                 : 'gentype_pi));
# 1109 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_termElementOrParen in
            let _3 = parseState.GetInput(3) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "Parser.fsy"
                                                          
                             (_1, None, _3)
                         
                   )
# 241 "Parser.fsy"
                 : 'gentype_pi));
# 1123 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_variableIdent in
            let _4 = parseState.GetInput(4) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "Parser.fsy"
                                                            
                             (None, _2, _4)
                         
                   )
# 246 "Parser.fsy"
                 : 'gentype_abs));
# 1137 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_variableIdent in
            let _5 = parseState.GetInput(5) :?> SynPreTerm in
            let _8 = parseState.GetInput(8) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "Parser.fsy"
                                                                                     
                             (Some _5, _3, _8)
                         
                   )
# 249 "Parser.fsy"
                 : 'gentype_abs));
# 1152 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynPreTerm in
            let _3 = parseState.GetInput(3) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "Parser.fsy"
                                         
                             ((None, _1, _3))
                         
                   )
# 254 "Parser.fsy"
                 : 'gentype_eq));
# 1166 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "Parser.fsy"
                                      _2
                   )
# 259 "Parser.fsy"
                 : 'gentype_refl));
# 1177 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "Parser.fsy"
                            []
                   )
# 264 "Parser.fsy"
                 : 'gentype_terms));
# 1187 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_terms' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "Parser.fsy"
                                   _1
                   )
# 265 "Parser.fsy"
                 : 'gentype_terms));
# 1198 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynPreTerm in
            let _2 = parseState.GetInput(2) :?> 'gentype_terms' in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "Parser.fsy"
                                        _1::_2
                   )
# 268 "Parser.fsy"
                 : 'gentype_terms'));
# 1210 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "Parser.fsy"
                                 [_1]
                   )
# 269 "Parser.fsy"
                 : 'gentype_terms'));
# 1221 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "Parser.fsy"
                                  {
                             str = _1
                             range = parseState.ResultRange
                         }
                   )
# 272 "Parser.fsy"
                 : SynIdent));
# 1235 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 "Parser.fsy"
                                      None
                   )
# 277 "Parser.fsy"
                 : 'gentype_symbolIdentOrUnderBar));
# 1245 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbolIdent in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "Parser.fsy"
                                        Some _1
                   )
# 278 "Parser.fsy"
                 : 'gentype_symbolIdentOrUnderBar));
# 1256 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbolIdentOrUnderBar in
            let _3 = parseState.GetInput(3) :?> 'gentype_context in
            let _5 = parseState.GetInput(5) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "Parser.fsy"
                                                                            Signature (_1, _3, _5, parseState.ResultRange)
                   )
# 281 "Parser.fsy"
                 : 'gentype_signature));
# 1269 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_context in
            let _3 = parseState.GetInput(3) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "Parser.fsy"
                                                Signature (None, _1, _3, parseState.ResultRange)
                   )
# 282 "Parser.fsy"
                 : 'gentype_signature));
# 1281 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbolIdentOrUnderBar in
            let _5 = parseState.GetInput(5) :?> SynPreTerm in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "Parser.fsy"
                                                                          
                             printfn "%O" _5
                             raise (ParseError ("signature", parseState))
                         
                   )
# 283 "Parser.fsy"
                 : 'gentype_signature));
# 1296 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 "Parser.fsy"
                                3 
                   )
# 288 "Parser.fsy"
                 : 'gentype_end));
|]
# 1307 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 31;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : SynModule =
    engine lexer lexbuf 0 :?> _
let syntax lexer lexbuf : Syntax =
    engine lexer lexbuf 2 :?> _
let longIdent lexer lexbuf : SynLongIdent =
    engine lexer lexbuf 4 :?> _
let contextElm lexer lexbuf : ContextElement =
    engine lexer lexbuf 6 :?> _
let term lexer lexbuf : SynPreTerm =
    engine lexer lexbuf 8 :?> _
let symbolArgs lexer lexbuf : SynPreTerm list =
    engine lexer lexbuf 10 :?> _
let symbolLongIdent lexer lexbuf : SynSymbolIdent =
    engine lexer lexbuf 12 :?> _
let ident lexer lexbuf : SynIdent =
    engine lexer lexbuf 14 :?> _
